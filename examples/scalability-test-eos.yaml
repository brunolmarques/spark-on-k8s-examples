#
# Copyright 2018 CERN/Switzerland
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: "sparkoperator.k8s.io/v1alpha1"
kind: SparkApplication
metadata:
  name: scltest-eos
  namespace: default
spec:
  type: Scala
  mode: cluster
  image: gitlab-registry.cern.ch/db/spark-service/docker-registry/spark-on-k8s:v2.4.0
  imagePullPolicy: IfNotPresent
  mainClass: ch.cern.sparkrootapplications.examples.DimuonReductionAODMultiDataset
  mainApplicationFile: <path-to>/spark-service-examples/target/scala-2.11/spark-service-examples_2.11-0.2.0.jar
  arguments:
     # Note that this file has to be submitted to driver by deps->files,
     # and then fetched in application with SparkFiles to executors
     # val configClusterFilePath = SparkFiles.get(configFileName)
    - scalability-test-eos-datasets.csv
     # save to local filesystem
    - file:///tmp/reduction-output
     # spark measure output (e.g. s3a://)
    - file:///tmp/sparkmeasure-results
  deps:
    files:
      - <path-to>/spark-service-examples/examples/scalability-test-eos-datasets.csv
    jars:
      - http://central.maven.org/maven2/org/diana-hep/root4j/0.1.6/root4j-0.1.6.jar
      - http://central.maven.org/maven2/org/apache/bcel/bcel/5.2/bcel-5.2.jar
      - http://central.maven.org/maven2/org/diana-hep/spark-root_2.11/0.1.16/spark-root_2.11-0.1.16.jar
      - http://central.maven.org/maven2/ch/cern/sparkmeasure/spark-measure_2.11/0.11/spark-measure_2.11-0.11.jar
  sparkConf:
    # Secure EOS - During submission of job,
    # ensure to have krb5cc_0 ticket inside your local HADOOP_CONF_DIR
    "spark.kubernetes.driverEnv.KRB5CCNAME": /etc/hadoop/conf/krb5cc_0
    "spark.executorEnv.KRB5CCNAME": /etc/hadoop/conf/krb5cc_0
    # Specify number of executor containers triggered at the time
    "spark.kubernetes.allocation.batch.size": "5"
    # Cloud specific - need to run with speculation to avoid problems
    "spark.speculation": "true"
    "spark.speculation.multiplier": "3"
    "spark.speculation.quantile": "0.9"
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "1024m"
    labels:
      version: 2.4.0
    serviceAccount: spark
  executor:
    instances: 1
    cores: 4
    memory: "6048m"
    labels:
      version: 2.4.0
  restartPolicy: Never
