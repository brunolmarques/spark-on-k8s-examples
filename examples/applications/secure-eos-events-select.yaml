# Example:
#
# Authenticate and put credentials in HADOOP_CONF_DIR
# $ kinit -c ~/hadoop-conf-dir/krb5cc_0 <your-user-name>
#
# Submit job
# $ HADOOP_CONF_DIR=~/hadoop-conf-dir ./sparkctl create ./jobs/secure-eos-events-select.yaml

apiVersion: "sparkoperator.k8s.io/v1alpha1"
kind: SparkApplication
metadata:
  name: secure-eos-events-select
  namespace: default
spec:
  type: Scala
  mode: cluster
  image: gitlab-registry.cern.ch/db/spark-service/docker-registry/spark:v2.4.0-hadoop3.1-examples
  imagePullPolicy: IfNotPresent
  mainClass: ch.cern.sparkrootapplications.examples.EventsSelect
  mainApplicationFile: local:///opt/spark/examples/jars/spark-service-examples_2.11-0.3.0.jar
  mode: cluster
  arguments:
    - "root://eosuser.cern.ch/eos/user/p/pmrowczy/Shared/evsel.root"
  deps:
    jars:
      # WARN - diana-hep/root4j package resets configs spark.hadoop on executors!!
      # WARN - must be specified in HADOOP_CONF_DIR in core-site.xml - ref https://github.com/diana-hep/root4j/issues/3
      - http://central.maven.org/maven2/org/diana-hep/root4j/0.1.6/root4j-0.1.6.jar
      - http://central.maven.org/maven2/org/apache/bcel/bcel/5.2/bcel-5.2.jar
      - http://central.maven.org/maven2/org/diana-hep/spark-root_2.11/0.1.16/spark-root_2.11-0.1.16.jar
  sparkConf:
    # Secure EOS - During submission of job,
    # ensure to have krb5cc_0 ticket inside your local HADOOP_CONF_DIR
    "spark.kubernetes.driverEnv.KRB5CCNAME": /etc/hadoop/conf/krb5cc_0
    "spark.executorEnv.KRB5CCNAME": /etc/hadoop/conf/krb5cc_0
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "1024m"
    labels:
      version: 2.4.0
    serviceAccount: spark
  executor:
    instances: 1
    cores: 1
    memory: "2048m"
    labels:
      version: 2.4.0
  restartPolicy: Never
