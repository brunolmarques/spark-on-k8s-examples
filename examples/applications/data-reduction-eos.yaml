# Example:
# Set credential for EOS in HADOOP_CONF_DIR
# $ kinit -c ~/hadoop-conf-dir/krb5cc_0 <your-user-name>
#
# Set credentials for S3 bucket (S3A) in HADOOP_CONF_DIR
# $ vi ~/hadoop-conf-dir/core-site.xml
#
# Init bucket for job output
# $ touch data-reduction-eos.init
# $ s3cmd mb s3://datasets
# $ s3cmd put data-reduction-eos.init s3://datasets/data-reduction-eos/data-reduction-eos.init
#
# Submit job with HADOOP_CONF_DIR (requires webhook)
# $ HADOOP_CONF_DIR=~/hadoop-conf-dir ./sparkctl create ./jobs/scalability-test-eos.yaml

apiVersion: "sparkoperator.k8s.io/v1alpha1"
kind: SparkApplication
metadata:
  name: data-reduction-eos
  namespace: default
spec:
  type: Scala
  mode: cluster
  image: gitlab-registry.cern.ch/db/spark-service/spark-k8s-examples:v2.4.0-hadoop3.1-examples
  imagePullPolicy: IfNotPresent
  mainClass: ch.cern.sparkrootapplications.examples.DimuonReductionAODMultiDataset
  mainApplicationFile: local:///opt/spark/examples/jars/spark-service-examples_2.11-0.3.0.jar
  mode: cluster
  arguments:
     # Note that this file has to be submitted to driver by deps->files,
     # and then fetched in application with SparkFiles to executors
     # val configClusterFilePath = SparkFiles.get(configFileName)
    - scalability-test-eos-datasets.csv
     # save to local filesystem (e.g. s3a://)
    - s3a://datasets/data-reduction-eos/reduction-output
     # spark measure output (e.g. s3a://)
    - s3a://datasets/data-reduction-eos/sparkmeasure-results
  deps:
    files:
      - local:///opt/spark/examples/scalability-test-eos-datasets.csv
    jars:
      - http://central.maven.org/maven2/org/diana-hep/root4j/0.1.6/root4j-0.1.6.jar
      - http://central.maven.org/maven2/org/apache/bcel/bcel/5.2/bcel-5.2.jar
      # WARN - diana-hep/spark-root_2.11 package resets configs spark.hadoop on executors!!
      # WARN - must be specified in HADOOP_CONF_DIR in core-site.xml - ref https://github.com/diana-hep/root4j/issues/3
      - http://central.maven.org/maven2/org/diana-hep/spark-root_2.11/0.1.16/spark-root_2.11-0.1.16.jar
      - http://central.maven.org/maven2/ch/cern/sparkmeasure/spark-measure_2.11/0.11/spark-measure_2.11-0.11.jar
  sparkConf:
    # Secure EOS - During submission of job,
    # ensure to have krb5cc_0 ticket inside your local HADOOP_CONF_DIR
    "spark.kubernetes.driverEnv.KRB5CCNAME": /etc/hadoop/conf/krb5cc_0
    "spark.executorEnv.KRB5CCNAME": /etc/hadoop/conf/krb5cc_0
    # Specify number of executor containers triggered at the time
    "spark.kubernetes.allocation.batch.size": "5"
    # Cloud specific - need to run with speculation to avoid problems
    # With speculation and S3, ensure to have proper flags set - check s3-example.yaml
    "spark.speculation": "true"
    "spark.speculation.multiplier": "3"
    "spark.speculation.quantile": "0.9"
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "1024m"
    labels:
      version: 2.4.0
    serviceAccount: spark
  executor:
    instances: 1
    cores: 1
    memory: "1024m"
    labels:
      version: 2.4.0
  restartPolicy: Never
