#
# Copyright 2018 CERN/Switzerland
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Example:
# HADOOP_CONF_DIR=~/hadoop-conf-dir ./sparkctl create ./jobs/tpcds.yaml --upload-to s3a://spark-on-k8s-cluster --override --endpoint-url "https://cs3.cern.ch"

apiVersion: "sparkoperator.k8s.io/v1alpha1"
kind: SparkApplication
metadata:
  name: tpcds
  namespace: default
spec:
  type: Scala
  mode: cluster
  # Use staging (tpcds image)
  image: gitlab-registry.cern.ch/db/spark-service/docker-registry/spark-on-k8s-staging:v2.4.0
  imagePullPolicy: IfNotPresent
  mainClass: ch.cern.tpcds.BenchmarkSparkSQL
  mainApplicationFile: <path-to>/spark-service-examples/target/scala-2.11/spark-service-examples_2.11-0.2.0.jar
  arguments:
    # working directory where data table reside (must exists and have tables directly)
    - "s3a:///<your-cluster-bucket>/TPCDS-TEST"
    # location to store results
    - "s3a:///<your-cluster-bucket>/TPCDS-TEST-RESULT"
    # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
    # Scale factor (in GB)
    - "1"
    # Number of iterations
    - "3"
    # Optimize queries
    - "false"
    # Filter queries, will run all if empty - "q23a-v2.4,q23b-v2.4"
    - ""
    # Logging set to WARN
    - "true"
  deps:
    jars:
      - <path-to>/spark-service-examples/libs/scala-logging_2.11-3.9.0.jar
      - <path-to>/spark-service-examples/libs/spark-sql-perf_2.11-0.5.0-SNAPSHOT.jar
  sparkConf:
    # Cloud specific - need to run with speculation to avoid problems
    "spark.speculation": "true"
    "spark.speculation.multiplier": "3"
    "spark.speculation.quantile": "0.9"
    # TPCDs Specific
    "spark.sql.broadcastTimeout": "7200"
    "spark.sql.crossJoin.enabled": "true"
    # S3 Specific config, remove if not needed (s3 not used)
    "fs.s3a.connection.timeout": "1200000"
    "fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "200"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version": "2"
    "spark.sql.parquet.mergeSchema": "false"
    "spark.sql.parquet.filterPushdown": "true"
  driver:
    cores: 4
    coreLimit: "4096m"
    memory: "6000m"
    labels:
      version: 2.4.0
    serviceAccount: spark
  executor:
    instances: 50
    cores: 4
    memory: "5000m"
    labels:
      version: 2.4.0
  restartPolicy: Never
