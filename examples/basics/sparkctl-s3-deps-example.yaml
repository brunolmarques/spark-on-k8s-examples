# Example:
# export AWS_ACCESS_KEY_ID=<redacted>
# export AWS_SECRET_ACCESS_KEY=<redacted>
# ./sparkctl create ./jobs/spark-pi-deps.yaml -u s3a://{{ custom-bucket }} -e "https://s3.cern.ch" --override

apiVersion: "sparkoperator.k8s.io/v1alpha1"
kind: SparkApplication
metadata:
  name: spark-pi
  namespace: default
spec:
  type: Scala
  mode: cluster
  image: gitlab-registry.cern.ch/db/spark-service/docker-registry/spark:v2.4.0-hadoop3.1
  imagePullPolicy: IfNotPresent
  mainClass: ch.cern.sparkrootapplications.examples.SparkPi
  mainApplicationFile: {{ path-to-examples }}/libs/spark-service-examples_2.11-0.3.0.jar
  mode: cluster
  deps:
    files:
      - {{ path-to-examples }}/libs/spark-sql-perf_2.11-0.5.0-SNAPSHOT.jar
  hadoopConf:
    # This settings allow you to authenticate to custom bucket {{ custom-bucket }} in s3.cern.ch endpoint
    "fs.s3a.endpoint": {{ endpoint }}
    "fs.s3a.bucket.{{ custom-bucket }}.access.key": {{ access }}
    "fs.s3a.bucket.{{ custom-bucket }}.secret.key": {{ secret }}
  driver:
    cores: 1
    coreLimit: "1000m"
    memory: "1024m"
    labels:
      version: 2.4.0
    serviceAccount: spark
  executor:
    instances: 1
    cores: 1
    memory: "2048m"
    labels:
      version: 2.4.0
  restartPolicy: Never